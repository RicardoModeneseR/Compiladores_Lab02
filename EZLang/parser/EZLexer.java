// Generated from EZLexer.g by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class EZLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PROGRAM=1, VAR=2, BEGIN=3, END=4, BOOL=5, INT=6, REAL=7, STRING=8, IF=9, 
		THEN=10, ELSE=11, READ=12, WRITE=13, REPEAT=14, UNTIL=15, TRUE=16, FALSE=17, 
		ASSIGN=18, SEMI=19, LPAR=20, RPAR=21, LT=22, EQ=23, PLUS=24, MINUS=25, 
		TIMES=26, OVER=27, ID=28, INT_VAL=29, REAL_VAL=30, STR_VAL=31, WS=32;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"PROGRAM", "VAR", "BEGIN", "END", "BOOL", "INT", "REAL", "STRING", "IF", 
			"THEN", "ELSE", "READ", "WRITE", "REPEAT", "UNTIL", "TRUE", "FALSE", 
			"ASSIGN", "SEMI", "LPAR", "RPAR", "LT", "EQ", "PLUS", "MINUS", "TIMES", 
			"OVER", "ID", "INT_VAL", "REAL_VAL", "STR_VAL", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'program'", "'var'", "'begin'", "'end'", "'bool'", "'int'", "'real'", 
			"'string'", "'if'", "'then'", "'else'", "'read'", "'write'", "'repeat'", 
			"'until'", "'true'", "'false'", "':='", "';'", "'('", "')'", "'<'", "'='", 
			"'+'", "'-'", "'*'", "'/'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "PROGRAM", "VAR", "BEGIN", "END", "BOOL", "INT", "REAL", "STRING", 
			"IF", "THEN", "ELSE", "READ", "WRITE", "REPEAT", "UNTIL", "TRUE", "FALSE", 
			"ASSIGN", "SEMI", "LPAR", "RPAR", "LT", "EQ", "PLUS", "MINUS", "TIMES", 
			"OVER", "ID", "INT_VAL", "REAL_VAL", "STR_VAL", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public EZLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "EZLexer.g"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000 \u00d8\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b"+
		"\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r"+
		"\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001"+
		"\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001"+
		"\u001b\u0001\u001b\u0005\u001b\u00b4\b\u001b\n\u001b\f\u001b\u00b7\t\u001b"+
		"\u0001\u001c\u0004\u001c\u00ba\b\u001c\u000b\u001c\f\u001c\u00bb\u0001"+
		"\u001d\u0004\u001d\u00bf\b\u001d\u000b\u001d\f\u001d\u00c0\u0001\u001d"+
		"\u0001\u001d\u0004\u001d\u00c5\b\u001d\u000b\u001d\f\u001d\u00c6\u0001"+
		"\u001e\u0001\u001e\u0005\u001e\u00cb\b\u001e\n\u001e\f\u001e\u00ce\t\u001e"+
		"\u0001\u001e\u0001\u001e\u0001\u001f\u0004\u001f\u00d3\b\u001f\u000b\u001f"+
		"\f\u001f\u00d4\u0001\u001f\u0001\u001f\u0001\u00cc\u0000 \u0001\u0001"+
		"\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f"+
		"\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f"+
		"\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u0018"+
		"1\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? \u0001\u0000\u0004"+
		"\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001\u000009\u0003\u0000\t\n\r"+
		"\r  \u00dd\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%"+
		"\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0001"+
		"A\u0001\u0000\u0000\u0000\u0003I\u0001\u0000\u0000\u0000\u0005M\u0001"+
		"\u0000\u0000\u0000\u0007S\u0001\u0000\u0000\u0000\tW\u0001\u0000\u0000"+
		"\u0000\u000b\\\u0001\u0000\u0000\u0000\r`\u0001\u0000\u0000\u0000\u000f"+
		"e\u0001\u0000\u0000\u0000\u0011l\u0001\u0000\u0000\u0000\u0013o\u0001"+
		"\u0000\u0000\u0000\u0015t\u0001\u0000\u0000\u0000\u0017y\u0001\u0000\u0000"+
		"\u0000\u0019~\u0001\u0000\u0000\u0000\u001b\u0084\u0001\u0000\u0000\u0000"+
		"\u001d\u008b\u0001\u0000\u0000\u0000\u001f\u0091\u0001\u0000\u0000\u0000"+
		"!\u0096\u0001\u0000\u0000\u0000#\u009c\u0001\u0000\u0000\u0000%\u009f"+
		"\u0001\u0000\u0000\u0000\'\u00a1\u0001\u0000\u0000\u0000)\u00a3\u0001"+
		"\u0000\u0000\u0000+\u00a5\u0001\u0000\u0000\u0000-\u00a7\u0001\u0000\u0000"+
		"\u0000/\u00a9\u0001\u0000\u0000\u00001\u00ab\u0001\u0000\u0000\u00003"+
		"\u00ad\u0001\u0000\u0000\u00005\u00af\u0001\u0000\u0000\u00007\u00b1\u0001"+
		"\u0000\u0000\u00009\u00b9\u0001\u0000\u0000\u0000;\u00be\u0001\u0000\u0000"+
		"\u0000=\u00c8\u0001\u0000\u0000\u0000?\u00d2\u0001\u0000\u0000\u0000A"+
		"B\u0005p\u0000\u0000BC\u0005r\u0000\u0000CD\u0005o\u0000\u0000DE\u0005"+
		"g\u0000\u0000EF\u0005r\u0000\u0000FG\u0005a\u0000\u0000GH\u0005m\u0000"+
		"\u0000H\u0002\u0001\u0000\u0000\u0000IJ\u0005v\u0000\u0000JK\u0005a\u0000"+
		"\u0000KL\u0005r\u0000\u0000L\u0004\u0001\u0000\u0000\u0000MN\u0005b\u0000"+
		"\u0000NO\u0005e\u0000\u0000OP\u0005g\u0000\u0000PQ\u0005i\u0000\u0000"+
		"QR\u0005n\u0000\u0000R\u0006\u0001\u0000\u0000\u0000ST\u0005e\u0000\u0000"+
		"TU\u0005n\u0000\u0000UV\u0005d\u0000\u0000V\b\u0001\u0000\u0000\u0000"+
		"WX\u0005b\u0000\u0000XY\u0005o\u0000\u0000YZ\u0005o\u0000\u0000Z[\u0005"+
		"l\u0000\u0000[\n\u0001\u0000\u0000\u0000\\]\u0005i\u0000\u0000]^\u0005"+
		"n\u0000\u0000^_\u0005t\u0000\u0000_\f\u0001\u0000\u0000\u0000`a\u0005"+
		"r\u0000\u0000ab\u0005e\u0000\u0000bc\u0005a\u0000\u0000cd\u0005l\u0000"+
		"\u0000d\u000e\u0001\u0000\u0000\u0000ef\u0005s\u0000\u0000fg\u0005t\u0000"+
		"\u0000gh\u0005r\u0000\u0000hi\u0005i\u0000\u0000ij\u0005n\u0000\u0000"+
		"jk\u0005g\u0000\u0000k\u0010\u0001\u0000\u0000\u0000lm\u0005i\u0000\u0000"+
		"mn\u0005f\u0000\u0000n\u0012\u0001\u0000\u0000\u0000op\u0005t\u0000\u0000"+
		"pq\u0005h\u0000\u0000qr\u0005e\u0000\u0000rs\u0005n\u0000\u0000s\u0014"+
		"\u0001\u0000\u0000\u0000tu\u0005e\u0000\u0000uv\u0005l\u0000\u0000vw\u0005"+
		"s\u0000\u0000wx\u0005e\u0000\u0000x\u0016\u0001\u0000\u0000\u0000yz\u0005"+
		"r\u0000\u0000z{\u0005e\u0000\u0000{|\u0005a\u0000\u0000|}\u0005d\u0000"+
		"\u0000}\u0018\u0001\u0000\u0000\u0000~\u007f\u0005w\u0000\u0000\u007f"+
		"\u0080\u0005r\u0000\u0000\u0080\u0081\u0005i\u0000\u0000\u0081\u0082\u0005"+
		"t\u0000\u0000\u0082\u0083\u0005e\u0000\u0000\u0083\u001a\u0001\u0000\u0000"+
		"\u0000\u0084\u0085\u0005r\u0000\u0000\u0085\u0086\u0005e\u0000\u0000\u0086"+
		"\u0087\u0005p\u0000\u0000\u0087\u0088\u0005e\u0000\u0000\u0088\u0089\u0005"+
		"a\u0000\u0000\u0089\u008a\u0005t\u0000\u0000\u008a\u001c\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0005u\u0000\u0000\u008c\u008d\u0005n\u0000\u0000\u008d"+
		"\u008e\u0005t\u0000\u0000\u008e\u008f\u0005i\u0000\u0000\u008f\u0090\u0005"+
		"l\u0000\u0000\u0090\u001e\u0001\u0000\u0000\u0000\u0091\u0092\u0005t\u0000"+
		"\u0000\u0092\u0093\u0005r\u0000\u0000\u0093\u0094\u0005u\u0000\u0000\u0094"+
		"\u0095\u0005e\u0000\u0000\u0095 \u0001\u0000\u0000\u0000\u0096\u0097\u0005"+
		"f\u0000\u0000\u0097\u0098\u0005a\u0000\u0000\u0098\u0099\u0005l\u0000"+
		"\u0000\u0099\u009a\u0005s\u0000\u0000\u009a\u009b\u0005e\u0000\u0000\u009b"+
		"\"\u0001\u0000\u0000\u0000\u009c\u009d\u0005:\u0000\u0000\u009d\u009e"+
		"\u0005=\u0000\u0000\u009e$\u0001\u0000\u0000\u0000\u009f\u00a0\u0005;"+
		"\u0000\u0000\u00a0&\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005(\u0000\u0000"+
		"\u00a2(\u0001\u0000\u0000\u0000\u00a3\u00a4\u0005)\u0000\u0000\u00a4*"+
		"\u0001\u0000\u0000\u0000\u00a5\u00a6\u0005<\u0000\u0000\u00a6,\u0001\u0000"+
		"\u0000\u0000\u00a7\u00a8\u0005=\u0000\u0000\u00a8.\u0001\u0000\u0000\u0000"+
		"\u00a9\u00aa\u0005+\u0000\u0000\u00aa0\u0001\u0000\u0000\u0000\u00ab\u00ac"+
		"\u0005-\u0000\u0000\u00ac2\u0001\u0000\u0000\u0000\u00ad\u00ae\u0005*"+
		"\u0000\u0000\u00ae4\u0001\u0000\u0000\u0000\u00af\u00b0\u0005/\u0000\u0000"+
		"\u00b06\u0001\u0000\u0000\u0000\u00b1\u00b5\u0007\u0000\u0000\u0000\u00b2"+
		"\u00b4\u0007\u0001\u0000\u0000\u00b3\u00b2\u0001\u0000\u0000\u0000\u00b4"+
		"\u00b7\u0001\u0000\u0000\u0000\u00b5\u00b3\u0001\u0000\u0000\u0000\u00b5"+
		"\u00b6\u0001\u0000\u0000\u0000\u00b68\u0001\u0000\u0000\u0000\u00b7\u00b5"+
		"\u0001\u0000\u0000\u0000\u00b8\u00ba\u0007\u0002\u0000\u0000\u00b9\u00b8"+
		"\u0001\u0000\u0000\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00b9"+
		"\u0001\u0000\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc:\u0001"+
		"\u0000\u0000\u0000\u00bd\u00bf\u0007\u0002\u0000\u0000\u00be\u00bd\u0001"+
		"\u0000\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00c0\u00be\u0001"+
		"\u0000\u0000\u0000\u00c0\u00c1\u0001\u0000\u0000\u0000\u00c1\u00c2\u0001"+
		"\u0000\u0000\u0000\u00c2\u00c4\u0005.\u0000\u0000\u00c3\u00c5\u0007\u0002"+
		"\u0000\u0000\u00c4\u00c3\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001\u0000"+
		"\u0000\u0000\u00c6\u00c4\u0001\u0000\u0000\u0000\u00c6\u00c7\u0001\u0000"+
		"\u0000\u0000\u00c7<\u0001\u0000\u0000\u0000\u00c8\u00cc\u0005\"\u0000"+
		"\u0000\u00c9\u00cb\t\u0000\u0000\u0000\u00ca\u00c9\u0001\u0000\u0000\u0000"+
		"\u00cb\u00ce\u0001\u0000\u0000\u0000\u00cc\u00cd\u0001\u0000\u0000\u0000"+
		"\u00cc\u00ca\u0001\u0000\u0000\u0000\u00cd\u00cf\u0001\u0000\u0000\u0000"+
		"\u00ce\u00cc\u0001\u0000\u0000\u0000\u00cf\u00d0\u0005\"\u0000\u0000\u00d0"+
		">\u0001\u0000\u0000\u0000\u00d1\u00d3\u0007\u0003\u0000\u0000\u00d2\u00d1"+
		"\u0001\u0000\u0000\u0000\u00d3\u00d4\u0001\u0000\u0000\u0000\u00d4\u00d2"+
		"\u0001\u0000\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000\u0000\u00d5\u00d6"+
		"\u0001\u0000\u0000\u0000\u00d6\u00d7\u0006\u001f\u0000\u0000\u00d7@\u0001"+
		"\u0000\u0000\u0000\u0007\u0000\u00b5\u00bb\u00c0\u00c6\u00cc\u00d4\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}